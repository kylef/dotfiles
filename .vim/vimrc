set nocompatible
filetype off

" Leader

let mapleader=" "  " Map <leader> to space

" File Navigation / Search
nnoremap <Leader>o :GFiles<cr>
nnoremap <Leader>O :Files<cr>
nnoremap <Leader>f :NERDTreeFind<cr>
nnoremap <Leader>ag :Ack <cword><cr>
nnoremap <Leader>b :Buffers<cr>

" Testing
nnoremap <Leader><CR> :TestNearest<cr>
nnoremap <Leader>t :TestFile<cr>
nnoremap <Leader>T :TestSuite<cr>

nnoremap <C-n> :tabn<cr>
nnoremap <C-p> :tabp<cr>
nnoremap <C-c> :tabnew<cr>

" Git

nnoremap <Leader>gs :Git status<cr>
nnoremap <Leader>gc :Git commit<cr>
nnoremap <Leader>gS :Git commit --amend<cr>
nnoremap <Leader>go :GBrowse<cr>

nnoremap <Leader>i :TagbarToggle<CR>

set hidden " Handle multiple buffers better

" Interface
color jellybeans
set number " Show line numbers
set showmode " Show the mode in use
set cursorline " Highlight current line
set wrap " Turn on line wrapping
"set textwidth=79 " Force wrap at 79 characters
set colorcolumn=80 " Show a column at 80
set title " Set the terminal title
set visualbell " Disable beeping
set mouse=a
set shortmess=Ia " Disable start up message and abbreviate items

" Show indication of newlines and trailing spaces
nmap <leader>l :set list!<CR>
set listchars=tab:▸\ ,trail:▝
set list

" Status Bar
set laststatus=2 " Always show status bar
" Highlight the status bar when in insert mode
au InsertEnter * hi StatusLine ctermfg=235 ctermbg=10
au InsertLeave * hi StatusLine ctermfg=15 ctermbg=240

" Search
set hlsearch " Highlight all search matches
set incsearch " Highlight matches as you type
set ignorecase
set smartcase " Be case-sensitive if expression contains a capital letter

" Backup
set nobackup
set nowritebackup
set directory=$HOME/.vim/tmp//,. " Keep swap files in one place

" Formatting
set tabstop=4 " Use 4 spaces to a tab
set shiftwidth=4 " As above
set expandtab " Expand tabs into spaces
set showbreak=↪

" Completion
set complete=.,w,b,u,t,i
set completeopt=menu
set wildmenu                                           " Better completion in the CLI
set wildmode=longest:full,full                         " Completion settings
set wildignore+=*/venv/*

" Use templates for new files
" from https://twitter.com/petdance/status/1009826710752317440
autocmd BufNewFile * silent! 0r ~/.vim/templates/%:e
autocmd BufNewFile * silent! 0r ~/.vim/templates/%:t

" Files
autocmd FileType gitcommit setlocal spell textwidth=72
autocmd FileType markdown setlocal spell textwidth=79
autocmd FileType apiblueprint setlocal spell textwidth=79
autocmd FileType javascript setlocal shiftwidth=2
autocmd FileType go setlocal noexpandtab

" Yeah... these get typoed
command W w
command Q q
command Wq wq
command WQ wq

" Wordcount
command! Wc :w !wc

" autocmd BufWritePre * :%s/\s\+$//e

" Syntastic
let g:syntastic_python_flake8_args="--max-complexity 10"

" ack-vim
let g:ackprg = 'ag --vimgrep'

" vim-test
if &term =~ "^screen"
  let test#strategy = "vimux"
  map <Leader>q :call VimuxCloseRunner()<CR>
else
  let test#strategy = "neovim"
endif

if &shell =~# 'fish$'
  set shell=bash
endif

" Podspecs ------ {{{
augroup ft_podspec
  autocmd!
  autocmd BufNewFile,BufRead,BufWrite *.podspec setlocal filetype=podspec
  autocmd BufNewFile,BufRead Podfile setlocal filetype=podfile
  autocmd FileType podspec,podfile set syntax=ruby
  autocmd FileType podspec set makeprg=pod\ spec\ lint\ %
  autocmd FileType podfile set makeprg=pod\ install
augroup END
" }}}

lua <<EOF
  require'lspconfig'.ansiblels.setup{}
  require'lspconfig'.bashls.setup{}
  require'lspconfig'.gopls.setup{}
  require'lspconfig'.pyright.setup{}
  require'lspconfig'.sourcekit.setup{}
  require'lspconfig'.terraformls.setup{}

  local cmp = require'cmp'
  cmp.setup({
    snippet = {
      expand = function(args)
        vim.fn["vsnip#anonymous"](args.body)
      end,
    },
    mapping = {
      ['<C-y>'] = cmp.mapping.confirm({ select = true }),
    },
    sources = {
      { name = 'nvim_lsp' },
    }
  })
EOF
